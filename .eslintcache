[{"/Users/darsh/Desktop/Projects/Robinhood/src/index.js":"1","/Users/darsh/Desktop/Projects/Robinhood/src/App.js":"2","/Users/darsh/Desktop/Projects/Robinhood/src/Header.js":"3","/Users/darsh/Desktop/Projects/Robinhood/src/Stock.js":"4","/Users/darsh/Desktop/Projects/Robinhood/src/Main.js":"5","/Users/darsh/Desktop/Projects/Robinhood/src/Newsfeed.js":"6","/Users/darsh/Desktop/Projects/Robinhood/src/Stats.js":"7","/Users/darsh/Desktop/Projects/Robinhood/src/Dropdown.js":"8","/Users/darsh/Desktop/Projects/Robinhood/src/api.js":"9","/Users/darsh/Desktop/Projects/Robinhood/src/Article.js":"10","/Users/darsh/Desktop/Projects/Robinhood/src/LineGraph.js":"11","/Users/darsh/Desktop/Projects/Robinhood/src/TimeLine.js":"12","/Users/darsh/Desktop/Projects/Robinhood/src/firebase.js":"13","/Users/darsh/Desktop/Projects/Robinhood/src/StatsRow.js":"14","/Users/darsh/Desktop/Projects/Robinhood/src/SingleArticle.js":"15","/Users/darsh/Desktop/Projects/Robinhood/src/StockData.js":"16","/Users/darsh/Desktop/Projects/Robinhood/src/Trade.js":"17","/Users/darsh/Desktop/Projects/Robinhood/src/CompanyDetails.js":"18"},{"size":264,"mtime":1607037108993,"results":"19","hashOfConfig":"20"},{"size":1055,"mtime":1607141183498,"results":"21","hashOfConfig":"20"},{"size":890,"mtime":1607141940662,"results":"22","hashOfConfig":"20"},{"size":1217,"mtime":1607320707564,"results":"23","hashOfConfig":"20"},{"size":474,"mtime":1607141122011,"results":"24","hashOfConfig":"20"},{"size":2894,"mtime":1607128405076,"results":"25","hashOfConfig":"20"},{"size":3179,"mtime":1607316148004,"results":"26","hashOfConfig":"20"},{"size":2250,"mtime":1607037108988,"results":"27","hashOfConfig":"20"},{"size":511,"mtime":1607201479737,"results":"28","hashOfConfig":"20"},{"size":1181,"mtime":1607320676927,"results":"29","hashOfConfig":"20"},{"size":1915,"mtime":1607141384578,"results":"30","hashOfConfig":"20"},{"size":702,"mtime":1607037108992,"results":"31","hashOfConfig":"20"},{"size":507,"mtime":1607037108993,"results":"32","hashOfConfig":"20"},{"size":1713,"mtime":1607102615579,"results":"33","hashOfConfig":"20"},{"size":1567,"mtime":1607201985631,"results":"34","hashOfConfig":"20"},{"size":1894,"mtime":1607320548397,"results":"35","hashOfConfig":"20"},{"size":2990,"mtime":1607319666439,"results":"36","hashOfConfig":"20"},{"size":1959,"mtime":1607291657239,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"16ia3tt",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/darsh/Desktop/Projects/Robinhood/src/index.js",[],["79","80"],"/Users/darsh/Desktop/Projects/Robinhood/src/App.js",[],"/Users/darsh/Desktop/Projects/Robinhood/src/Header.js",[],"/Users/darsh/Desktop/Projects/Robinhood/src/Stock.js",["81"],"/Users/darsh/Desktop/Projects/Robinhood/src/Main.js",[],"/Users/darsh/Desktop/Projects/Robinhood/src/Newsfeed.js",["82","83","84","85"],"import React, { useState, useEffect } from \"react\";\nimport \"./Newsfeed.css\";\nimport Article from \"./Article\";\nimport { Avatar } from \"@material-ui/core\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\nimport LineGraph from \"./LineGraph\";\nimport Chip from '@material-ui/core/Chip';\nimport TimeLine from './TimeLine'\n\n\nfunction Newsfeed() {\n  const [popularTopics, setTopics] = useState([\n    \"100 Most Popular\",\n    \"Top Movers\",\n    \"Upcoming Earnings\",\n    \"Crypto\",\n    \"Cannabis\",\n    \"Healthcare Supplies\",\n    \"Index ETFs\",\n    \"Technology\",\n    \"China\",\n    \"Pharma\",\n    \"Consumer Goods\",\n    \"Food & Drink\",\n    \"Energy & Water\",\n  ]);\n\n  const [seed, setSeed] = useState(\"\");\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  return (\n    <div className=\"newsfeed\">\n      <div className=\"newsfeed__container\">\n        <div className=\"newsfeed__chart__section\">\n          <div className=\"newsfeed_price_asset\">\n            <h1 className=\"price\"> $10,14,656.84</h1>\n            <div className=\"price__change\">\n            <div>\n            <span className=\"price__datas\"> $10542.90 (-0.12%)</span>\n            <span className=\"price__date\">Today</span>\n            </div>\n            <div className=\"price__div\">\n            <span className=\"price__datas\"> $4022.90 (+5.12%)</span>\n            <span className=\"price__date\">After hours</span>\n            </div>\n            </div>\n          </div>\n          <div className=\"newsfeed__chart\">\n            <LineGraph className=\"chart\"/>\n            <TimeLine />\n          </div>\n        </div>\n        <div className=\"newsfeed__buying__section\">\n          <span> Buying Power</span>\n          <span> $14,034.11</span>\n        </div>\n        {/* <div className=\"newsfeed__market__section\">\n          <div className=\"newsfeed__market__box\">\n            <p> Markets Closed</p>\n            <h1> Happy Thanksgiving</h1>\n          </div>\n        </div> */}\n        <div className=\"newsfeed__popularlists__section\">\n          <div className=\"newsfeed__popularlists__intro\">\n            <span className=\"list__title\">Popular lists</span>\n            <p>Show More</p>\n          </div>\n          <div className=\"newsfeed_popularlists_badges\">\n            {popularTopics.map((topic) => (\n              <div className=\"category__list\">\n              <Chip \n                className=\"topic__badge\"\n                variant=\"outlined\"\n                label={topic}\n                key={topic.id}\n                avatar={<Avatar\n                  src={`https://avatars.dicebear.com/api/human/${topic}.svg`}\n                  outlined={topic}\n                />} \n              />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div>\n          <Article />\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Newsfeed;","/Users/darsh/Desktop/Projects/Robinhood/src/Stats.js",["86","87","88"],"/Users/darsh/Desktop/Projects/Robinhood/src/Dropdown.js",["89"],"import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '0px solid #d3d4d5',\n    \n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nexport default function CustomizedMenus() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [text, setText] = React.useState('Account');\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <Link onClick={handleClick}>\n        {text}\n      </Link>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem>\n          <ListItemIcon>\n            <SendIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Sent mail\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemIcon>\n            <DraftsIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Drafts\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemIcon>\n            <InboxIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Inbox\" />\n        </StyledMenuItem>\n      </StyledMenu>\n   </>\n  );\n}\n","/Users/darsh/Desktop/Projects/Robinhood/src/api.js",[],"/Users/darsh/Desktop/Projects/Robinhood/src/Article.js",["90","91","92"],"/Users/darsh/Desktop/Projects/Robinhood/src/LineGraph.js",["93"],"import React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  hover: {\n    intersect: false\n  },\n  elements: {\n    line: {\n      tension: 0\n    },\n    point: {\n      radius: 5,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n        ticks: {\n          display: false,\n        }\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          display: false,\n        },\n      },\n    ],\n  },\n};\n\nfunction LineGraph({ casesType }) {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    \n    let data = [];\n    let value = 50;\n    let date = data.length + 3;\n    for(var i = 0; i < 365; i++){\n      let date = new Date();\n      date.setHours(9,30,10,20);\n      date.setDate(i);\n      value += Math.round(5 + Math.random() *(-5-5));\n      data.push({x: date, y: value});\n    }   \n    setData(data)\n  }, []);\n\n  return (\n    <div>\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                type: 'line',\n                backgroundColor: \"transparent\",\n                borderColor: \"#FF5000\",\n                borderWidth: 2,\n                pointBorderColor: 'rgba(0, 0, 0, 0)',\n                pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n                pointHoverBackgroundColor: '#FF5000',\n                pointHoverBorderColor: '#000000',\n                pointHoverBorderWidth: 4,\n                pointHoverRadius: 6,\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default LineGraph;","/Users/darsh/Desktop/Projects/Robinhood/src/TimeLine.js",[],"/Users/darsh/Desktop/Projects/Robinhood/src/firebase.js",[],"/Users/darsh/Desktop/Projects/Robinhood/src/StatsRow.js",["94","95"],"import React from \"react\";\nimport StockChart from \"./stock.svg\";\nimport { db } from \"./firebase\";\nimport {Link} from 'react-router-dom'\n\nfunction StatsRow(props) {\n  //   console.log(props, \"what is in props here?\");\n  // (currentPrice - openPrice)/openPrice\n  const percentage = ((props.price - props.openPrice) / props.openPrice) * 100;\n  \n  // const buyStock = (event) => {\n  //   db.collection(\"myStocks\")\n  //     .where(\"ticker\", \"==\", props.name)\n  //     .get()\n  //     .then((querySnapShot) => {\n  //       if (!querySnapShot.empty) {\n  //         querySnapShot.forEach(function (doc) {\n  //           // update the query\n  //           db.collection(\"myStocks\")\n  //             .doc(doc.id)\n  //             .update({\n  //               shares: (doc.data().shares += 1),\n  //             });\n  //         });\n  //       } else {\n  //         // update the query\n  //         db.collection(\"myStocks\").add({\n  //           ticker: props.name,\n  //           shares: 1,\n  //         });\n  //       }\n  //       // doc.data()\n  //     });\n  //  };\n\n  return (\n    <div>\n      <Link to={`/stocks/${props.name}`} className='nostyle'>\n    \n      <div className=\"row\" > \n        <div className=\"row__intro\">\n       \n          <h1>{props?.name}</h1>\n         \n          <p>{props.volume && props.volume + \" shares\"}</p>\n        </div>\n        \n        <div className=\"row__chart\">\n          <img src={StockChart} alt={props.title} height={16} />\n        </div>\n        <div className=\"row__numbers\">\n          <p className=\"row__price\">{props.price}</p>\n          <p className=\"row__percentage\"> {props.changePrice}%</p>\n        </div>\n      </div>\n      </Link>\n    </div>\n  );\n}\n\n\n\nexport default StatsRow;\n","/Users/darsh/Desktop/Projects/Robinhood/src/SingleArticle.js",["96"],"/Users/darsh/Desktop/Projects/Robinhood/src/StockData.js",[],"/Users/darsh/Desktop/Projects/Robinhood/src/Trade.js",["97","98"],"/Users/darsh/Desktop/Projects/Robinhood/src/CompanyDetails.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":28,"column":11,"nodeType":"105","endLine":28,"endColumn":13,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":21},{"ruleId":"107","severity":1,"message":"111","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":19},{"ruleId":"107","severity":1,"message":"112","line":13,"column":25,"nodeType":"109","messageId":"110","endLine":13,"endColumn":34},{"ruleId":"107","severity":1,"message":"113","line":29,"column":10,"nodeType":"109","messageId":"110","endLine":29,"endColumn":14},{"ruleId":"114","severity":1,"message":"115","line":26,"column":33,"nodeType":"116","messageId":"117","endLine":26,"endColumn":35},{"ruleId":"114","severity":1,"message":"115","line":57,"column":28,"nodeType":"116","messageId":"117","endLine":57,"endColumn":30},{"ruleId":"103","severity":1,"message":"118","line":73,"column":6,"nodeType":"105","endLine":73,"endColumn":8,"suggestions":"119"},{"ruleId":"107","severity":1,"message":"120","line":46,"column":16,"nodeType":"109","messageId":"110","endLine":46,"endColumn":23},{"ruleId":"107","severity":1,"message":"121","line":8,"column":12,"nodeType":"109","messageId":"110","endLine":8,"endColumn":17},{"ruleId":"107","severity":1,"message":"122","line":8,"column":19,"nodeType":"109","messageId":"110","endLine":8,"endColumn":27},{"ruleId":"103","severity":1,"message":"123","line":21,"column":11,"nodeType":"105","endLine":21,"endColumn":13,"suggestions":"124"},{"ruleId":"107","severity":1,"message":"125","line":59,"column":9,"nodeType":"109","messageId":"110","endLine":59,"endColumn":13},{"ruleId":"107","severity":1,"message":"126","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":12},{"ruleId":"107","severity":1,"message":"127","line":9,"column":9,"nodeType":"109","messageId":"110","endLine":9,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":9,"column":13,"nodeType":"130","endLine":9,"endColumn":28},{"ruleId":"107","severity":1,"message":"131","line":1,"column":15,"nodeType":"109","messageId":"110","endLine":1,"endColumn":23},{"ruleId":"107","severity":1,"message":"132","line":1,"column":24,"nodeType":"109","messageId":"110","endLine":1,"endColumn":33},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match'. Either include it or remove the dependency array.","ArrayExpression",["135"],"no-unused-vars","'MoreHorizIcon' is defined but never used.","Identifier","unusedVar","'FlashOnIcon' is defined but never used.","'setTopics' is assigned a value but never used.","'seed' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getMyStocks'. Either include it or remove the dependency array.",["136"],"'setText' is assigned a value but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["137"],"'date' is assigned a value but never used.","'db' is defined but never used.","'percentage' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [match]",{"range":"144","text":"145"},"Update the dependencies array to be: [getMyStocks]",{"range":"146","text":"147"},"Update the dependencies array to be: [props]",{"range":"148","text":"149"},[829,831],"[match]",[1807,1809],"[getMyStocks]",[599,601],"[props]"]