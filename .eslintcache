[{"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/index.js":"1","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/App.js":"2","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Providers/UserContext.js":"3","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Header.js":"4","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Main.js":"5","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Stock.js":"6","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Home.js":"7","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/firebase.js":"8","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/User/SignUp.js":"9","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/User/PasswordReset.js":"10","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/User/Login.js":"11","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/User/ProfilePage.js":"12","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/User/SignIn.js":"13","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Newsfeed.js":"14","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Stats.js":"15","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Dropdown.js":"16","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/SearchStock.js":"17","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Trade.js":"18","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/StockData.js":"19","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/api.js":"20","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Article.js":"21","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/TimeLine.js":"22","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Footer.js":"23","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/LineGraph.js":"24","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/TopMovers.js":"25","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/StatsRow.js":"26","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Search.js":"27","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/CompanyDetails.js":"28","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Earning.js":"29","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/SingleArticle.js":"30","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Graph.js":"31","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Rating.js":"32","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Recommendation.js":"33","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/FutureHistory.js":"34","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/MyStocks2.js":"35","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/MyStocks1.js":"36","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/QueryHistory.js":"37","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/TopCard.js":"38","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Prediction.js":"39"},{"size":357,"mtime":1622210243734,"results":"40","hashOfConfig":"41"},{"size":1617,"mtime":1622210243718,"results":"42","hashOfConfig":"41"},{"size":511,"mtime":1622210243725,"results":"43","hashOfConfig":"41"},{"size":983,"mtime":1622210243721,"results":"44","hashOfConfig":"41"},{"size":589,"mtime":1622210243723,"results":"45","hashOfConfig":"41"},{"size":6185,"mtime":1622210243729,"results":"46","hashOfConfig":"41"},{"size":159,"mtime":1622210243722,"results":"47","hashOfConfig":"41"},{"size":1491,"mtime":1622210243734,"results":"48","hashOfConfig":"41"},{"size":3663,"mtime":1622210243733,"results":"49","hashOfConfig":"41"},{"size":1864,"mtime":1622210243732,"results":"50","hashOfConfig":"41"},{"size":622,"mtime":1622210243732,"results":"51","hashOfConfig":"41"},{"size":1261,"mtime":1622210243732,"results":"52","hashOfConfig":"41"},{"size":3394,"mtime":1622210243732,"results":"53","hashOfConfig":"41"},{"size":3501,"mtime":1622210243724,"results":"54","hashOfConfig":"41"},{"size":3793,"mtime":1622210243728,"results":"55","hashOfConfig":"41"},{"size":2471,"mtime":1622210243720,"results":"56","hashOfConfig":"41"},{"size":1915,"mtime":1622210243727,"results":"57","hashOfConfig":"41"},{"size":5584,"mtime":1622210243731,"results":"58","hashOfConfig":"41"},{"size":6061,"mtime":1622210243729,"results":"59","hashOfConfig":"41"},{"size":978,"mtime":1622210243733,"results":"60","hashOfConfig":"41"},{"size":1188,"mtime":1622210243719,"results":"61","hashOfConfig":"41"},{"size":702,"mtime":1622210243729,"results":"62","hashOfConfig":"41"},{"size":425,"mtime":1622210243720,"results":"63","hashOfConfig":"41"},{"size":1915,"mtime":1622210243722,"results":"64","hashOfConfig":"41"},{"size":2073,"mtime":1622210243730,"results":"65","hashOfConfig":"41"},{"size":1886,"mtime":1622210243728,"results":"66","hashOfConfig":"41"},{"size":505,"mtime":1622210243726,"results":"67","hashOfConfig":"41"},{"size":5059,"mtime":1622210243719,"results":"68","hashOfConfig":"41"},{"size":2411,"mtime":1622210243720,"results":"69","hashOfConfig":"41"},{"size":1662,"mtime":1622210243727,"results":"70","hashOfConfig":"41"},{"size":2323,"mtime":1622210243721,"results":"71","hashOfConfig":"41"},{"size":1122,"mtime":1622210243726,"results":"72","hashOfConfig":"41"},{"size":1110,"mtime":1622210243726,"results":"73","hashOfConfig":"41"},{"size":627,"mtime":1622210243720,"results":"74","hashOfConfig":"41"},{"size":1251,"mtime":1622210243724,"results":"75","hashOfConfig":"41"},{"size":1930,"mtime":1622210243723,"results":"76","hashOfConfig":"41"},{"size":940,"mtime":1622210243725,"results":"77","hashOfConfig":"41"},{"size":1186,"mtime":1622210243730,"results":"78","hashOfConfig":"41"},{"size":1484,"mtime":1622210243725,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1x5msax",{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/index.js",[],["176","177"],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/App.js",["178","179","180","181","182"],"import React, {useContext} from 'react'\nimport './App.css'\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport Header from './Header'\nimport Main from './Main'\nimport Stock from './Stock'\nimport SignIn from './User/SignIn'\nimport SignUp from './User/SignUp'\nimport Home from './Home'\nimport PasswordReset from './User/PasswordReset'\nimport {UserContext} from './Providers/UserContext'\nimport ProfilePage from './User/ProfilePage'\nimport Login from './User/Login'\n\nfunction RouteWithSubRoutes(route) {\n  return (\n    <Route\n      path={route.path}\n      render={props => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n\nconst routes = [\n  {\n    path: \"/us/en/\",\n    exact: true,\n    component: Home,\n    \n  },\n  {\n    path: \"/\",\n    component: Main,\n    exact: true,\n  },\n\n  {\n    path:'/stocks/:name',\n    component: Stock,\n  },\n  {\n    path: '/account/login',\n    component: Login,\n  },\n  {\n    path: '/account/register',\n    component: SignUp,\n  },\n  {\n    path:'/account/reset-password',\n    component: PasswordReset,\n  },\n];\n\n\nfunction App() {\n  const user = null;\n  \n  return (\n     \n      <Router>\n    \n    <div className=\"App\">\n      <div className=\"app__header\">\n        \n      <Header/>\n      </div>\n      <div className=\"app__body\">\n          <Switch>\n          {routes.map((route, i) => (\n            <RouteWithSubRoutes key={i} {...route} />\n           ))}\n          \n         <Stock/>\n       </Switch>\n          \n      </div>\n    </div>\n    </Router>\n         \n  );\n}\n\nexport default App;\n","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Providers/UserContext.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Header.js",["183","184","185"],"import React, {useContext} from \"react\";\nimport Logo from './robinhood.svg'\nimport './Header.css'\nimport { UserContext } from \"./Providers/UserContext\"\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\nimport {Link} from 'react-router-dom'\nimport Dropdown from \"./Dropdown\";\nimport SearchStock from './SearchStock'\n\nfunction Header() {\n  const user = useContext(UserContext);\n  const {displayName, email,photoURL} = user;\n\n  return (\n    <div className=\"header__wrapper\">\n      <div className=\"header__logo\" style={{paddingLeft:'60px'}}>\n       <Link to='/'><img src={Logo} width={25} alt=\"Robinhood\"/></Link> \n      </div>\n      <div className=\"header__search\">\n      <SearchStock/>\n      </div>\n      <div className=\"header__menuItems\">\n        <a href=\"/\">Free Stocks</a>\n        <a href=\"/\">Portfolio</a>\n        <a href=\"/Cash\">Cash</a>\n        <a href=\"/\">Messages</a>\n        <Dropdown name={displayName}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Main.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Stock.js",["186","187","188","189"],"import React,{ useState, useEffect} from 'react'\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from \"axios\";\nimport StockData from './StockData'\nimport Trade from './Trade'\nimport {key, host} from \"./api\";\nimport { db } from './firebase';\n\nconst BASE_URL = \"https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/get-detail?symbol=\";\nconst NEWS_URL = 'https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/get-news?category=';\nconst FUTURE__URL = 'https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/v2/get-upgrades-downgrades?symbol='\nconst RECOMMENDATION__URL = 'https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/v2/get-recommendations?symbol='\n\nconst KEY_URL = `&region=US&rapidapi-key=${key}&x-rapidapi-host=${host}`\n\n const GRAPH_URL = 'https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&outputsize=compact&symbol=';\n const GRAPH_PARAMS = `&apikey=YDER30K38MP32WSW`;\n\nfunction Stock({match},props) {\n    const [profile,setProfile] = useState([]);\n    const [graph,setGraph] = useState([]);\n    const [news,setNews] = useState([]);\n    const [future,setFuture] = useState([]);\n    const [recommend,setRecommend] = useState([]);\n    const [info,setInfo] = useState([]);\n    const [pageViews,setPageViews] = useState([]);\n\n       useEffect(() => {\n        document.title = `${profile.quoteType?.symbol} - ${profile.price?.currencySymbol}${profile.price?.preMarketPrice?.fmt || profile.price?.postMarketPrice?.fmt  || profile.price?.regularMarketPrice?.fmt} | Robinhood`;\n      },[document.title],30000);\n\n\n    useEffect(() => {\n        if (match) {\n            return axios\n              .request(`${BASE_URL}${match.params.name}${KEY_URL}`)\n              .then((res) => {\n                let profile = res.data;\n                setProfile(profile);\n                })\n              .catch((error) => {\n                console.error(\"Error\", error.message);\n              });\n            }\n        },[match],60000);\n        \n\n        useEffect(() => {\n          if (match) {\n              return axios\n                .request(`${GRAPH_URL}${match.params.name}${GRAPH_PARAMS}`)\n                .then((res) => {\n                  let graph = res.data;\n                  setGraph(graph);\n                  })\n                .catch((error) => {\n                  console.error(\"Error\", error.message);\n                });\n              }\n          },[match]); \n          \n        useEffect(() => {\n          if (match) {\n              return axios\n                .request(`${NEWS_URL}${match.params.name}${KEY_URL}`)\n                .then((res) => {\n                  let data = res.data.items.result;\n                  let topnews = data.slice(0,3);\n                  setNews(topnews);\n                  })\n                .catch((error) => {\n                  console.error(\"Error\", error.message);\n                });\n              }\n          },[match]); \n\n          useEffect(() => {\n            if (match) {\n                return axios\n                  .request(`${FUTURE__URL}${match.params.name}${KEY_URL}`)\n                  .then((res) => {\n                    let data = res.data.upgradeDowngradeHistory.history;\n                    let future = data.slice(0,8);\n                    setFuture(future);\n                    })\n                  .catch((error) => {\n                    console.error(\"Error\", error.message);\n                  });\n                }\n            },[match]); \n            \n            useEffect(() => {\n              if (match) {\n                  return axios\n                    .request(`${RECOMMENDATION__URL}${match.params.name}${KEY_URL}`)\n                    .then((res) => {\n                      let data = res.data.finance.result[0].quotes;\n                      let recommend = data.slice(0,5);\n                      setRecommend(recommend);\n\n                      })\n                    .catch((error) => {\n                      console.error(\"Error\", error.message);\n                    });\n                  }\n              },[match]); \n\n              useEffect(() => {\n                if (match) {\n                    return axios\n                      .request(`${BASE_URL}${match.params.name}${KEY_URL}`)\n                      .then((res) => {\n                        let pageViews = res.data.pageViews;\n                        setPageViews(pageViews);\n  \n                        })\n                      .catch((error) => {\n                        console.error(\"Error\", error.message);\n                      });\n                    }\n                },[match]);\n              \n              // useEffect(() => {\n              //     db.collection('myStocks')\n              //       .where(\"ticker\", \"==\",match.params.name)\n              //       .get()\n              //       .then((querySnapshot) => {\n              //         querySnapshot.forEach((doc) => {\n              //             // doc.data() is never undefined for query doc snapshots\n              //             db.collection(\"mySocks\")\n              //             .doc(doc.id)\n              //             .get({\n              //               info: doc.data\n              //             });\n                          \n              //               setInfo({info});\n              //           });\n              //         })\n                      \n              //     })\n                 \n              \n    return (\n      <Container maxWidth='lg'>\n      {/* {\n        profile.quoteType?.symbol ? */}\n      \n      <Box display=\"flex\" width=\"100%\">\n        <Box width=\"70%\" >         \n        {\n           <StockData profile={profile} graph={graph} news={news} future={future} recommend={recommend} pageViews = {pageViews} match={match}/>\n          }\n        </Box>\n        <Box  width=\"25%\">\n        <div className=\"stat__container\">\n          {<Trade profile={profile}/>}\n          </div>\n        </Box>\n      </Box>\n       : \n          <div className='progress'>\n       <CircularProgress color='secondary' style={{ padding:'320px 0px'}}/>\n       </div>\n         \n      </Container>\n\n    )\n}\n\nexport default Stock\n","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Home.js",["190"],"import React from 'react'\nimport Header from './Header'\n\nfunction Home() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default Home\n","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/firebase.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/User/SignUp.js",["191"],"import React, { useState,useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {generateUserDocument,auth,signInWithGoogle} from '../firebase'\nconst SignUp = () => {\n    const [user,setUser] = useState('')\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    (async() =>{\n        auth.onAuthStateChanged(async userAuth => {\n            const user = await generateUserDocument(userAuth);\n            setUser({ user });\n          });\n    })()\n  }, [])\n\n  const createUserWithEmailAndPasswordHandler = async (event, email, password) => {\n    event.preventDefault();\n    try{\n      const {user} = await auth.createUserWithEmailAndPassword(email, password);\n      generateUserDocument(user, {displayName});\n    }\n    catch(error){\n      setError('Error Signing up with email and password');\n    }\n\n    setEmail(\"\");\n    setPassword(\"\");\n    setDisplayName(\"\");\n  };\n\n  const onChangeHandler = event => {\n    const { name, value } = event.currentTarget;\n    if (name === \"userEmail\") {\n      setEmail(value);\n    } else if (name === \"userPassword\") {\n      setPassword(value);\n    } else if (name === \"displayName\") {\n      setDisplayName(value);\n    }\n  };\n\n  return (\n    <div className=\"mt-8\">\n      <h1 className=\"text-3xl mb-2 text-center font-bold\">Sign Up</h1>\n      <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\n        {error !== null && (\n          <div className=\"py-4 bg-red-600 w-full text-white text-center mb-3\">\n            {error}\n          </div>\n        )}\n        <form className=\"\">\n          <label htmlFor=\"displayName\" className=\"block\">\n            Display Name:\n          </label>\n          <input\n            type=\"text\"\n            className=\"my-1 p-1 w-full \"\n            name=\"displayName\"\n            value={displayName}\n            placeholder=\"E.g: Faruq\"\n            id=\"displayName\"\n            onChange={event => onChangeHandler(event)}\n          />\n          <label htmlFor=\"userEmail\" className=\"block\">\n            Email:\n          </label>\n          <input\n            type=\"email\"\n            className=\"my-1 p-1 w-full\"\n            name=\"userEmail\"\n            value={email}\n            placeholder=\"E.g: faruq123@gmail.com\"\n            id=\"userEmail\"\n            onChange={event => onChangeHandler(event)}\n          />\n          <label htmlFor=\"userPassword\" className=\"block\">\n            Password:\n          </label>\n          <input\n            type=\"password\"\n            className=\"mt-1 mb-3 p-1 w-full\"\n            name=\"userPassword\"\n            value={password}\n            placeholder=\"Your Password\"\n            id=\"userPassword\"\n            onChange={event => onChangeHandler(event)}\n          />\n          <button\n            className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\"\n            onClick={event => {\n              createUserWithEmailAndPasswordHandler(event, email, password);\n            }}\n          >\n            Sign up\n          </button>\n        </form>\n        <p className=\"text-center my-3\">or</p>\n        <button\n        onClick={signInWithGoogle}\n          className=\"bg-red-500 hover:bg-red-600 w-full py-2 text-white\"\n        >\n          Sign In with Google\n        </button>\n        <p className=\"text-center my-3\">\n          Already have an account?{\" \"}\n          <Link to=\"/account/login\" className=\"text-blue-500 hover:text-blue-600\">\n            Sign in here\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\nexport default SignUp;","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/User/PasswordReset.js",["192","193","194"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst PasswordReset = () => {\n  const [email, setEmail] = useState(\"\");\n  const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\n  const [error, setError] = useState(null);\n  const onChangeHandler = event => {\n    const { name, value } = event.currentTarget;\n    if (name === \"userEmail\") {\n      setEmail(value);\n    }\n  };\n  const sendResetEmail = event => {\n    event.preventDefault();\n  };\n  return (\n    <div className=\"mt-8\">\n      <h1 className=\"text-xl text-center font-bold mb-3\">\n        Reset your Password\n      </h1>\n      <div className=\"border border-blue-300 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\n        <form action=\"\">\n          {emailHasBeenSent && (\n            <div className=\"py-3 bg-green-400 w-full text-white text-center mb-3\">\n              An email has been sent to you!\n            </div>\n          )}\n          {error !== null && (\n            <div className=\"py-3 bg-red-600 w-full text-white text-center mb-3\">\n              {error}\n            </div>\n          )}\n          <label htmlFor=\"userEmail\" className=\"w-full block\">\n            Email:\n          </label>\n          <input\n            type=\"email\"\n            name=\"userEmail\"\n            id=\"userEmail\"\n            value={email}\n            placeholder=\"Input your email\"\n            onChange={onChangeHandler}\n            className=\"mb-3 w-full px-1 py-2\"\n          />\n          <button\n            className=\"w-full bg-blue-400 text-white py-3\"\n          >\n            Send me a reset link\n          </button>\n        </form>\n        <Link\n         to =\"/\"\n          className=\"my-2 text-blue-700 hover:text-blue-800 text-center block\"\n        >\n          &larr; back to sign in page\n        </Link>\n      </div>\n    </div>\n  );\n};\nexport default PasswordReset;","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/User/Login.js",["195"],"import React from 'react'\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container'\nimport SignIn from './SignIn'\nimport'./Login.css'\n\nfunction Login() {\n    return (\n        <div>\n            <Container maxWidth='lg' >\n      <Box display=\"flex\" width=\"100%\">\n        <Box width=\"120%\" >     \n         <img className='css-1ox8jnp' src='https://cdn.robinhood.com/assets/generated_assets/1e23d6b90f0d905b425ea289de345ab1.jpg' />\n          </Box>\n        <Box  width=\"100%\">\n          <SignIn/>\n        </Box>\n      </Box>\n    </Container> \n        </div>\n   \n    )\n}\n\nexport default Login\n","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/User/ProfilePage.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/User/SignIn.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Newsfeed.js",["196","197","198"],"import React, { useState, useEffect } from \"react\";\nimport \"./Newsfeed.css\";\nimport Article from \"./Article\";\nimport { Avatar } from \"@material-ui/core\";\nimport LineGraph from \"./LineGraph\";\nimport Chip from '@material-ui/core/Chip';\nimport TimeLine from './TimeLine'\nimport Footer from './Footer'\nimport TopMovers from \"./TopMovers\";\nimport BeanCounter from 'react-bean-counter'\n\n\n\nfunction Newsfeed() {\n  const [popularTopics, setTopics] = useState([\n    \"100 Most Popular\",\n    \"Top Movers\",\n    \"Upcoming Earnings\",\n    \"Crypto\",\n    \"Cannabis\",\n    \"Healthcare Supplies\",\n    \"Index ETFs\",\n    \"Technology\",\n    \"China\",\n    \"Pharma\",\n    \"Consumer Goods\",\n    \"Food & Drink\",\n    \"Energy & Water\",\n  ]);\n\n  const [seed, setSeed] = useState(\"\");\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  return (\n    <div className=\"newsfeed\">\n      <div className=\"newsfeed__container\">\n        <div className=\"newsfeed__chart__section\">\n          <div className=\"newsfeed_price_asset\">\n            <h1 className=\"price\"> $101,46,56.84</h1>\n            <div className=\"price__change\">\n            <div>\n            <span className=\"price__datas\"> $105,42.90 (-0.12%)</span>\n            <span className=\"price__date\">Today</span>\n            </div>\n            <div className=\"price__div\">\n            <span className=\"price__datas\"> $4,022.90 (+5.12%)</span>\n            <span className=\"price__date\">After hours</span>\n            </div>\n            </div>\n          </div>\n          <div className=\"newsfeed__chart\">\n            <LineGraph className=\"chart\"/>\n            <TimeLine />\n          </div>\n        </div>\n        <div className=\"newsfeed__buying__section\">\n          <span> Buying Power</span>\n          <span> $14,034.11</span>\n        </div>\n        <div className=\"newsfeed__market__section\">\n          <div className=\"newsfeed__market__box\">\n            <p> Markets Updates</p>\n            <h2> Refer and earn a free AAPLE or FACEBOOK stock </h2>\n          </div>\n        </div>\n        <div className=\"newsfeed__popularlists__section\">\n          <div className=\"newsfeed__popularlists__intro\">\n            <span className=\"list__title\">Popular lists</span>\n            <p>Show More</p>\n          </div>\n          <div className=\"newsfeed_popularlists_badges\">\n            {popularTopics.map((topic) => (\n              <div className=\"category__list\">\n              <Chip \n                className=\"topic__badge\"\n                variant=\"default\"\n                color='primary'\n                clickable\n                label={topic}\n                key={topic.id}\n                avatar={<Avatar\n                  src={`https://avatars.dicebear.com/api/human/${topic}.svg`}\n                  outlined={topic}\n                  key={topic.id}\n                />} \n              />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"newsfeed__topmovers__section\"> \n        \n        <div className=\"newsfeed__popularlists__intro\">\n            <span className=\"list__title\">Trending Today</span>\n            <p>Show More</p>\n          </div>\n          <TopMovers />\n\n        </div>\n        <div className=\"newsfeed__popularlists__intro\">\n            <span className=\"list__title\">News</span>\n            \n          </div>\n        <div>\n          <Article />\n          </div>\n      </div>\n      <div className='newsfeed__topmovers__section'>\n      <Footer/>\n      </div>\n    </div>\n  );\n}\n\nexport default Newsfeed;","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Stats.js",["199","200","201"],"import React, { useState, useEffect } from \"react\";\nimport \"./Stats.css\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport AddIcon from '@material-ui/icons/Add';\nimport StatsRow from \"./StatsRow\";\nimport { key,host } from \"./api\";\nimport axios from \"axios\";\nimport { db } from \"./firebase\";\n\n\nconst BASE_URL = \"https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/v2/get-profile?symbol=\";\nconst KEY_URL = `&region=US&rapidapi-key=${key}&x-rapidapi-host=${host}`;\n\nconst testData = [];\nfunction Stats() {\n  const [stocksData, setStocksData] = useState([]);\n  const [myStocks, setMyStocks] = useState([]);\n\n  const getMyStocks = () => {\n   db\n    .collection('myStocks')\n    .onSnapshot(snapshot => {\n        let promises = [];\n        let tempData = []\n        snapshot.docs.map((doc) => {\n          promises.push(getStocksData(doc.data().ticker)\n          .then(res => {\n            \n            tempData.push({\n              id: doc.id,\n              data: doc.data(),\n              info: res?.data.price\n            }\n            )\n          })\n          \n        )})\n        Promise.all(promises).then(()=>{\n          setMyStocks(tempData);\n        });\n    })\n  }\n\n  const getStocksData = (stock) => {\n    return axios\n      .request(`${BASE_URL}${stock}${KEY_URL}`)\n      .catch((error) => {\n        console.error(\"Error\", error.message);\n      });\n  };\n\n  useEffect(() => {\n    const stocksList = ['AAPL' ];\n\n    getMyStocks();\n    let promises = [];\n    stocksList.map((stock) => {\n      promises.push(\n        getStocksData(stock)\n        .then((res) => {\n          testData.push({\n            name: stock,\n            info: res?.data.price\n          });\n        })\n        )\n    });\n\n    Promise.all(promises).then(()=>{\n      setStocksData(testData);\n    })\n  }, [testData]);\n\n  return (\n    \n    \n      <div className=\"stats__container\">\n        <div className=\"stats__header\">\n        \n          <p> Stocks</p>\n          <MoreHorizIcon />\n        </div>\n        <div className=\"stats__content\">\n          \n          <div className=\"stats__rows\">\n          \n            { myStocks.map((stock) => (\n              <StatsRow\n                key={stock.data?.ticker}\n                name={stock.data?.ticker}\n                shares={stock.data?.shares}\n                currency={stock.info?.currencySymbol}\n                regularPrice={stock.info?.regularMarketPrice?.fmt }\n                prePrice={stock.info?.preMarketPrice?.fmt }\n                postPrice={stock.info?.postMarketPrice?.fmt }\n                regularChange={stock.info?.regularMarketChangePercent?.fmt }\n                preChange={stock.info?.preMarketChangePercent?.fmt }\n                postChange={stock.info?.postMarketChangePercent?.fmt }\n                buyPrice={stock.data?.buyPrice}\n              />\n            ))}\n          \n          </div>\n        </div>\n         \n        <div className=\"stats__header stats-lists\">\n          <p>Lists</p>\n          <AddIcon/>\n        </div>\n        <div className=\"stats__content\">\n          <div className=\"stats__rows\">\n            {stocksData.map((stock) => (\n              <StatsRow\n                key={stock?.name}\n                name={stock?.name}\n                regularPrice={stock.info?.regularMarketPrice?.fmt }\n                prePrice={stock.info?.preMarketPrice?.fmt }\n                postPrice={stock.info?.postMarketPrice?.fmt }\n                regularChange={stock.info?.regularMarketChangePercent?.fmt }\n                preChange={stock.info?.preMarketChangePercent?.fmt }\n                postChange={stock.info?.postMarketChangePercent?.fmt }\n                currency={stock.info?.currencySymbol}\n              /> \n            ))}\n          </div>\n        </div>\n        </div>\n        \n      \n        \n  );\n}\n\nexport default Stats;","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Dropdown.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/SearchStock.js",["202","203","204","205"],"import React,{useState,useEffect} from 'react'\nimport './SearchStock.css'\nimport {key} from \"./api\";\nimport './Header.css'\nimport Search from './Search'\nimport { AutoComplete } from 'antd';\n\nconst BASE_URL = \"https://apidojo-yahoo-finance-v1.p.rapidapi.com/market/auto-complete?query=\";\nconst KEY_URL = `&region=US&rapidapi-key=${key}`;\n \nfunction sleep(delay = 0) {\n  return new Promise ((resolve) => {\n    setTimeout(resolve, delay);\n  })\n}\n\nfunction SearchStock() {\n  const [open, setOpen] = useState(false);\n  const [search, setSearch] = useState([]);\n  const [options,setOptions] = useState([]);\n  const loading = open && search.length === 0;\n\n  useEffect(() => {\n    async function fetchSwapi() {\n      if(search.length > 0){\n        const res = await fetch(`${BASE_URL}${search}${KEY_URL}`)\n        const dat = await res.json();\n        let options = dat.ResultSet.Result;\n        setOptions(options);\n        \n    }}\n    fetchSwapi()\n    // add when mounted\n    },[search]); \n\n    return (\n     \n      <div className=\"header__searchContainer\">\n        {/* <AutoComplete\n    style={{\n      width: 200,\n    }}\n    options={options}\n    placeholder=\"try to type `b`\"\n    filterOption={(inputValue, option) =>\n      option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n    }\n  /> */}\n        <input placeholder=\"Search\" type=\"search\" onChange={e =>\n          setSearch(e.target.value)}\n          onPointerCancel={e=> {\n          document.querySelectorAll('input');\n          setOptions(null);\n          setSearch(null);\n        }\n      }\n         />\n       {\n         search.length > 0 ?\n         \n      <div className='auto-complete'> \n        {options.map(option => (\n          <Search \n            key={option.symbol}\n            symbol={option.symbol}\n            name={option.name}\n          />\n        ))}\n        </div>\n        : null }\n        </div> \n    )\n}\n\nexport default SearchStock\n","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Trade.js",["206"],"import React from 'react'\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\"\nimport Input from '@material-ui/core/Input';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport { TextField,Button } from '@material-ui/core';\nimport './Trade.css'\nimport {db} from './firebase'\n\nconst style = {\n  background: '#02C805',\n  borderRadius: 3,\n  border: 0,\n  color: 'black',\n  height: 48,\n  width: 200,\n  fontWeight:'bold',\n  letterSpacing: 1.7,\n  \n};\n\nfunction Trade({profile}) {\n  \n   const buyStock = (event) => {\n    db.collection(\"myStocks\")\n      .where(\"ticker\", \"==\", profile?.symbol)\n      .get()\n      .then((querySnapShot) => {\n        if (!querySnapShot.empty) {\n          querySnapShot.forEach(function (doc) {\n            // update the query\n            db.collection(\"myStocks\")\n              .doc(doc.id)\n              .update({\n                shares: (doc.data().shares += 1),\n                dateTime: new Date()\n              });\n          });\n        } else {\n          // update the query\n          db.collection(\"myStocks\").add({\n            ticker: profile.symbol,\n            shares: 1,\n            dateTime: new Date(),\n          });\n        }\n        // doc.data()\n      });\n   };\n\n    return (\n      \n     \n      <>\n        <div className=\"stats__header\">\n          <p> Buy {profile?.symbol}</p>\n          <MoreHorizIcon />\n        </div>\n        <div className=\"stats__content\">\n          <div className=\"stats__rows\">\n          <div>\n            <div className='trade-details'>\n                <label className='trade-label'>\n                    Limit Price\n                </label>\n                <div className='trade-input'>\n                  <div className='_2X_C2V1jKOFk-3x2QNyNW1'>\n                  <div className='css-x189p4'>\n                     <TextField id=\"outlined-basic\" placeholder='$0.00' autoComplete='off'  type='text' />\n                     {/* <Input type=\"number\" error='true' placeholder='0' required onChange={(event)=> (event.target.value) }/> */}\n                </div>\n                </div>\n                </div>\n            </div>\n            </div>\n            <div>\n            <div className='trade-details'>\n                <label className='trade-label'>\n                    Shares\n                </label>\n                <div className='trade-input'>\n                  <div className='_2X_C2V1jKOFk-3x2QNyNW1'>\n                  <div className='css-x189p4'>\n                     <TextField  placeholder='0' autoComplete='off' type='text' required/>\n                </div>\n                </div>\n                </div>\n            </div>\n            </div>\n\n            <div>\n            <div className='trade-details'>\n                <label className='trade-label1'>\n                    Market Price \n                    <span className='help__icon'>\n                    <HelpOutlineIcon fontSize='small' color='secondary'/>\n                    </span>\n                </label>\n                <div className='trade-input'>\n                  <div className='_2X_C2V1jKOFk-3x2QNyNW12'>\n                  <div className='css-x189p4'>\n                  <div className='_2ZZrJfyutWozgUjKja3vp9'>\n                  <h3>{profile.price?.currencySymbol ? profile.price?.currencySymbol : null}\n                  {profile.price?.preMarketPrice || profile.price?.postMarketPrice || profile.price?.regularMarketPrice ? profile.price?.preMarketPrice.fmt || profile?.price.postMarketPrice.fmt || profile.price?.regularMarketPrice.fmt : null }\n                  </h3>\n                     </div>\n                </div>\n                </div>\n                </div>\n            </div>\n            </div>\n\n            <div>\n            <div className='trade-details2'>\n                <label className='trade-label'>\n                    Expires\n                </label>\n                <div className='trade-input'>\n                  <div className='_2X_C2V1jKOFk-3x2QNyNW1'>\n                  <div className='css-x189p4'>\n                     <Button className='-aVQMh2t1ihTiMYRyjQA2' type='button' role='button' aria-label='open-menu' aria-haspopup='true' data-toggle='true'>\n                     <div className='_2ZZrJfyutWozgUjKja3vp9'>\n                          <span>Good for Day</span>\n                     </div>\n                     <div className='_3n_jK_e253MhrymMnCvcxy'>\n                         <span className='css-6q9pz'>\n                        \n                         </span>\n                    </div>\n                     </Button>\n                </div>\n                </div>\n                </div>\n                \n            </div>\n            </div>\n            \n           \n\n          </div>\n        </div>\n        <div className='_1oJVwyMO-j1ETeFAdtVHEW'>\n        <div className='_3kmUcs_2E5JhpQECnnYLG XzyC-hUeuhJpKibZShdJi'>\n        <div className=\"_3NYUZLMS54TNjTgbj_F0W- _2QawT-EkOq7gIQN1hHcFqU\" style={{height: '0px', transitionDuration: '300ms'}}>\n        <div className=\"_3UC6vIw0Z8kgiibABGCPT2\">\n        <div>\n          </div>\n          <div className=\"_3_Y5qz2hHsr3c1JlQ15G0N\">\n          <div className=\"_1fx5BG_fao1VLT8kHNxyTs\">\n          <div className=\"css-fzwid6\">\n          <Button style={style} onClick={buyStock}>\n          <div className=\"css-1bz5kc3\">\n          <span className=\"css-j0s357\">\n          <span className=\"css-1jzf67n\">Review Order</span>\n          </span>\n          </div>\n          </Button>\n          </div>\n          </div>\n          </div>\n          </div>\n          </div>\n        </div>\n          </div>\n      </>\n     \n    )\n}\n\nexport default Trade\n","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/StockData.js",["207","208","209","210"],"import React, {useState,useEffect} from 'react'\nimport TimeLine from './TimeLine'\nimport CompanyDetails from './CompanyDetails'\nimport Earning from './Earning';\nimport Graph from './Graph';\nimport SingleArticle from './SingleArticle';\nimport Rating from './Rating'\nimport FutureHistory from './FutureHistory';\nimport Recommendation from './Recommendation';\nimport Box from '@material-ui/core/Box'\nimport MyStocks1 from './MyStocks1';\nimport MyStocks2 from './MyStocks2'\nimport QueryHistory from './QueryHistory';\nimport LineGraph from './LineGraph';\nimport {db} from './firebase'\n\nexport function truncate(str,n){\n  return str?.length > n ? str.substr(0, n-1) + \"...\": str;\n}\n\n\nfunction StockData({profile,graph,news,future,recommend,match, pageViews}) {\n  const [info,setInfo] = useState([]);\n\n  const {\n          preMarketPrice = profile.price?.preMarketPrice,\n          postMarketPrice = profile.price?.postMarketPrice,\n          regularMarketPrice = profile.price?.regularMarketPrice,\n          preMarketChange = profile.price?.preMarketChange,\n          postMarketChange = profile.price?.postMarketChange,\n          regularMarketChange = profile.price?.regularMarketChange,\n          regularMarketChangePercent = profile.price?.regularMarketChangePercent,\n          postMarketChangePercent = profile.price?.postMarketChangePercent,\n          preMarketChangePercent = profile.price?.preMarketChangePercent,\n          currencySymbol = profile.price?.currencySymbol,\n          longName = profile.quoteType?.longName,\n          symbol = profile.quoteType?.symbol,\n        } = profile;\n\n        useEffect(() => {\n          db.collection('myStocks')\n          .onSnapshot(snapshot => {\n          snapshot.docs.map((doc) => {\n            if(doc.data().ticker === symbol) {\n              let info = doc.data();\n              setInfo(info);\n           }\n    })\n  })\n          },[])\n\n         \n\n    return (\n\n      <div className=\"newsfeed\">\n      <div className=\"newsfeed__container\">\n      <div className=\"newsfeed__chart__section\">\n\n      <div className=\"newsfeed_price_asset\">\n        <h1 className=\"price\"> { longName || symbol }</h1>\n        <div className=\"price__change\">\n        <div className=\"price\">\n        <span> {currencySymbol}\n        { postMarketPrice?.fmt || regularMarketPrice?.fmt || preMarketPrice?.fmt  ? preMarketPrice?.fmt || postMarketPrice?.fmt  || regularMarketPrice?.fmt  : '-' }\n        </span>\n        </div>\n\n        { regularMarketChange?.fmt && regularMarketChangePercent?.fmt ? \n        <div className=\"price__div\">\n        <span className=\"price__datas\">{ regularMarketChange?.fmt }</span>\n        <span className=\"price__datas\">({ regularMarketChangePercent?.fmt })</span>\n        <span className='price__date'>Today</span>\n       </div> \n       :\n       null }\n\n       <div className=\"price__div\">\n        { postMarketPrice?.fmt ?         \n        <span className=\"price__datas\"> { postMarketChange?.fmt } </span>\n       :\n       null}\n\n       { preMarketChangePercent?.fmt || postMarketChangePercent?.fmt ? \n       \n        <span className=\"price__datas\"> ({ preMarketChangePercent?.fmt || postMarketChangePercent?.fmt  })<span className='price__date'>After Hours</span></span>\n        :\n        null }\n       </div>\n       \n        </div>\n      </div>\n\n      <div className=\"newsfeed__chart\">\n        <Graph className=\"chart\" graph={graph}/>\n        <TimeLine />\n      </div>\n    </div>\n\n    <div>\n\n    {info?.ticker  ?\n        <Box display=\"inline-flex\" style={{paddingTop:'10px'}}>\n          <Box border={1} style={{borderColor:'#42494D', width:'25rem',margin:'20px',height:'auto'}}>\n            <MyStocks1 info={info} profile={profile}/>\n          </Box>\n          <Box border={1} style={{borderColor:'#42494D', width:'25rem' ,height:'18rem',margin:'20px'}}>\n            <MyStocks2 info={info} profile={profile}/>\n\n          </Box>\n        </Box>\n         : null}\n    </div>\n   \n\n    {/* {info?.ticker ?  \n    <div>\n      <div className=\"newsfeed__popularlists__section\">\n        <span className=\"list__title\">Upcoming Activities</span>\n      </div> \n        <QueryHistory info={info} />  \n     </div>\n    : null} */}\n\n          {profile?.summaryProfile ? \n            <div className=\"newsfeed__popularlists__section\">\n        <div className=\"newsfeed__popularlists__intro\">\n        <span className=\"list__title\">About</span>\n        <p>Show More</p>\n        </div>\n              <div>\n              {profile.summaryProfile?.longBusinessSummary ?\n            <span className='newsfeed__article__content'>{truncate(profile.summaryProfile?.longBusinessSummary,900)}</span>\n            : null}\n            <CompanyDetails profile={profile}/> \n            </div>\n      </div>\n        :\n          null\n          }\n\n    {\n      news.length > 0  ? \n\n          <div>\n      <div className=\"newsfeed__popularlists__section\">\n        <span className=\"list__title\">News</span>\n        </div> \n      {news.map(news => (\n\n            <SingleArticle \n                  key={news?.reference_id}\n                  image={news.main_image?.original_url}\n                  link={news?.link}\n                  publisher={news?.publisher}\n                  time={news?.published_at}\n                  title={news?.title}\n                  summary={news?.summary}\n                  source={news?.source}\n            />\n      ))}\n      </div>\n\n        : null}\n\n        { profile?.calendarEvents > 0 || profile.calendarEvents?.earnings  ? <Earning profile={profile}/> : null }\n        \n        { pageViews ? <Rating pageViews={pageViews}/> : null }\n  \n        { future.length > 0 ? <FutureHistory future={future}/> : null }\n        {info?.ticker ?\n        <div>\n      <div className=\"newsfeed__popularlists__section\">\n        <span className=\"list__title\">History</span>\n      </div> \n      \n        <QueryHistory info={info}/>\n        \n     </div>\n    : null }\n       { recommend?.length > 0 ? <Recommendation key={match} recommend={recommend} match={match} profile={profile} /> : null }\n \n    </div>\n    </div>\n\n    )\n}\n\nexport default StockData;","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/api.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Article.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/TimeLine.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Footer.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/LineGraph.js",["211"],"import React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  hover: {\n    intersect: false\n  },\n  elements: {\n    line: {\n      tension: 0\n    },\n    point: {\n      radius: 5,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n        ticks: {\n          display: false,\n        }\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          display: false,\n        },\n      },\n    ],\n  },\n};\n\nfunction LineGraph({ casesType }) {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    \n    let data = [];\n    let value = 50;\n    let date = data.length + 3;\n    for(var i = 0; i < 365; i++){\n      let date = new Date();\n      date.setHours(9,30,10,20);\n      date.setDate(i);\n      value += Math.round(5 + Math.random() *(-5-5));\n      data.push({x: date, y: value});\n    }   \n    setData(data)\n  }, []);\n\n  return (\n    <div>\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                type: 'line',\n                backgroundColor: \"transparent\",\n                borderColor: \"#3CC805\",\n                borderWidth: 2,\n                pointBorderColor: 'rgba(0, 0, 0, 0)',\n                pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n                pointHoverBackgroundColor: '#3CC805',\n                pointHoverBorderColor: '#000000',\n                pointHoverBorderWidth: 4,\n                pointHoverRadius: 6,\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default LineGraph;","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/TopMovers.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/StatsRow.js",["212"],"import React from \"react\";\nimport StockChart from \"./stock.svg\";\nimport { db } from \"./firebase\";\nimport {Link} from 'react-router-dom'\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nfunction StatsRow(props) {\n  //   console.log(props, \"what is in props here?\");\n  // (currentPrice - openPrice)/openPrice\n  \n  const buyStock = (event) => {\n    db.collection('myStocks')\n      .where(\"ticker\", \"==\", props.name)\n      .get()\n      .then((querySnapShot) => {\n        if (!querySnapShot.empty) {\n          querySnapShot.forEach(function (doc) {\n            // update the query\n            db.collection(\"mySocks\")\n            .doc(doc.id)\n            .update({\n              shares: (doc.data().shares += 1),\n            });\n           \n          });\n        } else {\n          // update the query\n          db.collection(\"myStocks\").add({\n            ticker: props.name,\n            shares: 1,\n          });\n        }\n        // doc.data()\n      });\n   };\n\n  return (\n    <div>\n      <Link to={`/stocks/${props?.name}`} className='nostyle'>\n      { props ? \n      <div className=\"row\"> \n        <div className=\"row__intro\">\n          <h1>{props?.name}</h1>\n            \n          <p>{props?.shares && props?.shares + \" shares\"}</p>\n          {/* <p>{props?.buyPrice}</p> */}\n        </div> \n        \n        <div className=\"row__chart\">\n          <img src={StockChart} alt={props?.title} height={16} />\n        </div>\n        <div className=\"row__numbers\">\n          <p className=\"row__price\">{props?.currency} {props?.prePrice }</p>\n          <p className=\"row__percentage\"> { props?.preChange || props?.regularChange  || props?.postChange}%</p>\n        </div>\n        {/* <div className=\"row\">\n        <h2>{props.company}</h2>\n        </div> */}\n      </div>\n      : \n      <Skeleton animation=\"wave\" varirant=\"text\" /> }\n      </Link>\n    </div>\n  );\n}\n\n\n\nexport default StatsRow;\n","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Search.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/CompanyDetails.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Earning.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/SingleArticle.js",["213"],"import React from 'react'\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\nimport {truncate} from './StockData'\nfunction SingleArticle(props) {\n   \n    return (\n        \n        \n        <div className=\"single\">\n          <a rel={'external'} className=\"nostyle\" \n            target=\"_blank\" href={props?.link} >\n        <div className='newsfeed__articles__header'>     \n            <div className=\"newsfeed__article__title\">\n            <div className='header__article'>\n            <div className='css-70qvj9'>\n            <span className=\"css-sj6ac5\">\n                <FlashOnIcon/>\n            </span>\n            <span className=\"_1fshCErpE1-0MuTzZ8-Lxk\">\n            {props?.publisher}\n            </span>\n            <span className='time__updated'>{props?.time}</span>\n            </div>\n            <div>\n            <span  className=\"_1YD8Jvi6dW0I_OeBIY0vLp\">\n                <MoreHorizIcon/>\n            </span>\n            </div>    \n            </div>\n            \n            <div className=\"newsfeed__article__headline\">\n                 <p>{props?.title}</p>\n            </div>  \n        </div>\n    \n        <div className=\"newsfeed__article__content\">\n            <div className=\"newsfeed__article__paragraph\">\n                <p>\n                    {truncate(props.summary,100)}\n                </p>\n            </div>\n            <div className=\"newsfeed__article__image\">\n\n                <img src={props?.image} width=\"145\" height=\"85\" alt={props?.source}/>\n\n            </div>\n        </div>   \n        </div>\n        </a>\n        </div>\n\n    )\n}\n\nexport default SingleArticle\n","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Graph.js",["214","215","216"],"import React,{useState,useEffect} from 'react'\nimport { Line } from \"react-chartjs-2\";\nimport Plot from 'react-plotly.js';\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  responsive:'true',\n  hover: {\n    intersect: false\n  },\n  elements: {\n    line: {\n      tension: 0,\n    },\n    point: {\n      radius: 1,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n        ticks: {\n          display: false,\n        }\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          display: false,\n        },\n      },\n    ],\n  },\n};\n\n\nfunction Graph({ graph,casesType }) {\n    const [xvalues, setXValues] = useState({});\n    const [yvalues, setYValues] = useState({});\n    \n  useEffect(() => {\n   let data = graph;\n   let StockXValues =[];\n   let StockYValues =[];\n   for (var key in data['Time Series (Daily)']) {\n     StockXValues.push(key);\n     StockYValues.push(data['Time Series (Daily)'][key]['1. open']);\n   }\n   setYValues(StockYValues);\n   setXValues(StockXValues);\n   \n  }, []);\n\n\n  return (\n      \n    <div>\n      \n        {/* <Line\n          data={{\n            datasets: [\n              {\n                type: 'line',\n                backgroundColor: \"transparent\",\n                borderColor: \"#3CC805\",\n                borderWidth: 2,\n                pointBorderColor: 'rgba(0, 0, 0, 0)',\n                pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n                pointHoverBackgroundColor: '#3CC805',\n                pointHoverBorderColor: '#000000',\n                pointHoverBorderWidth: 1,\n                pointHoverRadius: 2,\n                data: {yvalues},\n              },\n            ],\n            \n          }}\n          options={options}\n        /> */}\n        <Plot\n          data={[\n            {\n              x: {xvalues},\n              y: {yvalues},\n              type: 'scatter',\n              mode: 'lines+markers',\n              marker: {color: 'red'},\n            }\n          ]}\n          layout={{width: 720, height: 440, title: 'A Fancy Plot'}}\n        />\n      \n    </div>\n  );\n}\n\nexport default Graph\n","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Rating.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Recommendation.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/FutureHistory.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/MyStocks2.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/MyStocks1.js",["217"],"import React from 'react'\nimport './MyStocks.css'\nimport Table from '@material-ui/core/Table'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport ColumnGroup from 'antd/lib/table/ColumnGroup'\n\nfunction MyStocks1({info,profile}) {\n    \n    const todayReturn = ((profile.price.regularMarketChange?.fmt ) - ( profile.price.preMarketChange?.fmt || profile.price.postMarketChange?.fmt))*(info?.shares);\n    const totalReturn = ((profile.price?.preMarketPrice?.fmt || profile.price?.postMarketPrice?.fmt || profile.price?.regularMarketPrice?.fmt) - (info.buyPrice))*(info?.shares);\n    const totalValue = (info.buyPrice) *(info.shares);\n    const marketValue = (totalValue) + (totalReturn);\n\n    \n    return (\n        <div className='box'>\n            <div className='box-title1'>\n                <span className='box-heading'>\n                    Your Market Value\n                </span>\n                </div>\n                <div>\n                    <h2 className='box-title2'>\n                    {profile.price?.currencySymbol}{(Math.round(marketValue * 100) / 100).toFixed(2)}\n                    </h2>\n                </div>\n                <div className='box-table'>\n                <Table>\n                <TableRow>\n                    <TableCell scope='row' align='left'>Today's Return</TableCell>\n                    <TableCell scope='row' align='right'> {profile.price?.currencySymbol} {(Math.round(todayReturn * 100) / 100).toFixed(2)}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell scope='row' align='left'>Total Return</TableCell>\n                    <TableCell scope='row' align='right'> {profile.price?.currencySymbol} {(Math.round(totalReturn * 100) / 100).toFixed(2)}</TableCell>\n                </TableRow>\n                </Table>\n                </div>\n        </div>\n    )\n}\n\nexport default MyStocks1\n","/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/QueryHistory.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/TopCard.js",[],"/Users/darsh/Desktop/Projects/Projetcts/Robinhood/src/Prediction.js",[],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":1,"column":16,"nodeType":"224","messageId":"225","endLine":1,"endColumn":26},{"ruleId":"222","severity":1,"message":"226","line":7,"column":8,"nodeType":"224","messageId":"225","endLine":7,"endColumn":14},{"ruleId":"222","severity":1,"message":"227","line":11,"column":9,"nodeType":"224","messageId":"225","endLine":11,"endColumn":20},{"ruleId":"222","severity":1,"message":"228","line":12,"column":8,"nodeType":"224","messageId":"225","endLine":12,"endColumn":19},{"ruleId":"222","severity":1,"message":"229","line":60,"column":9,"nodeType":"224","messageId":"225","endLine":60,"endColumn":13},{"ruleId":"222","severity":1,"message":"230","line":5,"column":8,"nodeType":"224","messageId":"225","endLine":5,"endColumn":22},{"ruleId":"222","severity":1,"message":"231","line":12,"column":23,"nodeType":"224","messageId":"225","endLine":12,"endColumn":28},{"ruleId":"222","severity":1,"message":"232","line":12,"column":29,"nodeType":"224","messageId":"225","endLine":12,"endColumn":37},{"ruleId":"222","severity":1,"message":"233","line":9,"column":10,"nodeType":"224","messageId":"225","endLine":9,"endColumn":12},{"ruleId":"222","severity":1,"message":"234","line":27,"column":12,"nodeType":"224","messageId":"225","endLine":27,"endColumn":16},{"ruleId":"222","severity":1,"message":"235","line":27,"column":17,"nodeType":"224","messageId":"225","endLine":27,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":32,"column":9,"nodeType":"238","endLine":32,"endColumn":25,"suggestions":"239"},{"ruleId":"222","severity":1,"message":"240","line":2,"column":8,"nodeType":"224","messageId":"225","endLine":2,"endColumn":14},{"ruleId":"222","severity":1,"message":"229","line":5,"column":12,"nodeType":"224","messageId":"225","endLine":5,"endColumn":16},{"ruleId":"222","severity":1,"message":"241","line":6,"column":28,"nodeType":"224","messageId":"225","endLine":6,"endColumn":47},{"ruleId":"222","severity":1,"message":"242","line":7,"column":17,"nodeType":"224","messageId":"225","endLine":7,"endColumn":25},{"ruleId":"222","severity":1,"message":"243","line":14,"column":9,"nodeType":"224","messageId":"225","endLine":14,"endColumn":23},{"ruleId":"244","severity":1,"message":"245","line":13,"column":10,"nodeType":"246","endLine":13,"endColumn":134},{"ruleId":"222","severity":1,"message":"247","line":10,"column":8,"nodeType":"224","messageId":"225","endLine":10,"endColumn":19},{"ruleId":"222","severity":1,"message":"248","line":15,"column":25,"nodeType":"224","messageId":"225","endLine":15,"endColumn":34},{"ruleId":"222","severity":1,"message":"249","line":31,"column":10,"nodeType":"224","messageId":"225","endLine":31,"endColumn":14},{"ruleId":"250","severity":1,"message":"251","line":25,"column":33,"nodeType":"252","messageId":"253","endLine":25,"endColumn":35},{"ruleId":"250","severity":1,"message":"251","line":57,"column":28,"nodeType":"252","messageId":"253","endLine":57,"endColumn":30},{"ruleId":"236","severity":1,"message":"254","line":72,"column":6,"nodeType":"238","endLine":72,"endColumn":16,"suggestions":"255"},{"ruleId":"222","severity":1,"message":"256","line":6,"column":10,"nodeType":"224","messageId":"225","endLine":6,"endColumn":22},{"ruleId":"222","severity":1,"message":"257","line":11,"column":10,"nodeType":"224","messageId":"225","endLine":11,"endColumn":15},{"ruleId":"222","severity":1,"message":"258","line":18,"column":16,"nodeType":"224","messageId":"225","endLine":18,"endColumn":23},{"ruleId":"222","severity":1,"message":"259","line":21,"column":9,"nodeType":"224","messageId":"225","endLine":21,"endColumn":16},{"ruleId":"222","severity":1,"message":"260","line":3,"column":8,"nodeType":"224","messageId":"225","endLine":3,"endColumn":13},{"ruleId":"222","severity":1,"message":"261","line":14,"column":8,"nodeType":"224","messageId":"225","endLine":14,"endColumn":17},{"ruleId":"222","severity":1,"message":"262","line":29,"column":11,"nodeType":"224","messageId":"225","endLine":29,"endColumn":26},{"ruleId":"250","severity":1,"message":"251","line":43,"column":35,"nodeType":"252","messageId":"253","endLine":43,"endColumn":37},{"ruleId":"236","severity":1,"message":"263","line":50,"column":13,"nodeType":"238","endLine":50,"endColumn":15,"suggestions":"264"},{"ruleId":"222","severity":1,"message":"265","line":59,"column":9,"nodeType":"224","messageId":"225","endLine":59,"endColumn":13},{"ruleId":"222","severity":1,"message":"266","line":11,"column":9,"nodeType":"224","messageId":"225","endLine":11,"endColumn":17},{"ruleId":"267","severity":1,"message":"268","line":12,"column":13,"nodeType":"269","endLine":12,"endColumn":28},{"ruleId":"222","severity":1,"message":"270","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":14},{"ruleId":"222","severity":1,"message":"271","line":5,"column":7,"nodeType":"224","messageId":"225","endLine":5,"endColumn":14},{"ruleId":"236","severity":1,"message":"272","line":70,"column":6,"nodeType":"238","endLine":70,"endColumn":8,"suggestions":"273"},{"ruleId":"222","severity":1,"message":"274","line":6,"column":8,"nodeType":"224","messageId":"225","endLine":6,"endColumn":19},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'SignIn' is defined but never used.","'UserContext' is defined but never used.","'ProfilePage' is defined but never used.","'user' is assigned a value but never used.","'SearchOutlined' is defined but never used.","'email' is assigned a value but never used.","'photoURL' is assigned a value but never used.","'db' is defined but never used.","'info' is assigned a value but never used.","'setInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.price?.currencySymbol', 'profile.price?.postMarketPrice?.fmt', 'profile.price?.preMarketPrice?.fmt', 'profile.price?.regularMarketPrice?.fmt', and 'profile.quoteType?.symbol'. Either include them or remove the dependency array. Outer scope values like 'document.title' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["277"],"'Header' is defined but never used.","'setEmailHasBeenSent' is assigned a value but never used.","'setError' is assigned a value but never used.","'sendResetEmail' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'BeanCounter' is defined but never used.","'setTopics' is assigned a value but never used.","'seed' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getMyStocks'. Either include it or remove the dependency array. Outer scope values like 'testData' aren't valid dependencies because mutating them doesn't re-render the component.",["278"],"'AutoComplete' is defined but never used.","'sleep' is defined but never used.","'setOpen' is assigned a value but never used.","'loading' is assigned a value but never used.","'Input' is defined but never used.","'LineGraph' is defined but never used.","'preMarketChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'symbol'. Either include it or remove the dependency array.",["279"],"'date' is assigned a value but never used.","'buyStock' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Line' is defined but never used.","'options' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'graph'. Either include it or remove the dependency array.",["280"],"'ColumnGroup' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},"Update the dependencies array to be: [profile.price?.currencySymbol, profile.price?.postMarketPrice?.fmt, profile.price?.preMarketPrice?.fmt, profile.price?.regularMarketPrice?.fmt, profile.quoteType?.symbol]",{"range":"289","text":"290"},"Update the dependencies array to be: [getMyStocks]",{"range":"291","text":"292"},"Update the dependencies array to be: [symbol]",{"range":"293","text":"294"},"Update the dependencies array to be: [graph]",{"range":"295","text":"296"},[1623,1639],"[profile.price?.currencySymbol, profile.price?.postMarketPrice?.fmt, profile.price?.preMarketPrice?.fmt, profile.price?.regularMarketPrice?.fmt, profile.quoteType?.symbol]",[1789,1799],"[getMyStocks]",[1874,1876],"[symbol]",[1265,1267],"[graph]"]